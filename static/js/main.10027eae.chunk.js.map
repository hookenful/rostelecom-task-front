{"version":3,"sources":["components/Home.js","components/AddDepModal.js","components/EditDepModal.js","components/Department.js","components/AddUserModal.js","components/EditUserModal.js","components/Users.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","AddDepModal","props","snackbarClose","event","setState","snackbaropen","state","snackbarmsg","handleSubmit","bind","preventDefault","fetch","method","headers","body","JSON","stringify","Name","target","DepartmentName","value","then","res","json","result","error","Snackbar","anchorOrigin","vertical","horizontal","open","this","autoHideDuration","onClose","message","id","action","IconButton","key","arial-label","color","onClick","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","Row","Col","sm","Form","onSubmit","Group","controlId","Label","Control","type","name","required","placeholder","Button","variant","Footer","onHide","EditDepModal","DepartmentId","disabled","defaultValue","depid","depname","Department","deps","addModalShow","editModalShow","refreshList","response","data","window","confirm","header","editModalClose","Table","striped","bordered","hover","map","dep","ButtonToolbar","deleteDep","show","AddUserModal","UserName","FullName","console","log","as","EditUserModal","UserId","userid","username","fullname","departmentid","Users","users","user","userName","fullName","department","deleteUser","Navigation","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","to","App","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.10027eae.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport class Home extends Component {\r\n    render(){\r\n    return (\r\n        <div className = \"mt-5 d-flex jsutify-content-left\">\r\n            <h3>Welcome to Home page of User Management Portal</h3>\r\n            </div>\r\n    )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class AddDepModal extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {snackbaropen: false, snackbarmsg:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n        this.setState({snackbaropen: false});\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/departments\", {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Accept\":\"application/json\",\r\n                \"Content-Type\":\"application/json\",\r\n                \"Origin\": \"*\"\r\n            },\r\n            body: JSON.stringify({\r\n                Name: event.target.DepartmentName.value\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>\r\n        {\r\n            this.setState({snackbaropen: true, snackbarmsg: \"Added successfully!\"})\r\n            \r\n        },\r\n        (error) =>{\r\n            this.setState({snackbaropen: true, snackbarmsg: \"failed\"})\r\n        }\r\n        )\r\n    }\r\n    render() {\r\n        return(\r\n            <div className = \"container\">\r\n                <Snackbar \r\n                anchorOrigin = {{vertical:'center', horizontal:'center'}}\r\n                open = {this.state.snackbaropen}\r\n                autoHideDuration = {3000}\r\n                onClose = {this.snackbarClose}\r\n                message = {<span id =\"message-id\">{this.state.snackbarmsg}</span>}\r\n                action={[<IconButton\r\n                    key=\"close\"\r\n                    arial-label=\"close\"\r\n                    color =\"inherit\"\r\n                    onClick ={this.snackbarClose}>\r\n                    x\r\n                    </IconButton>\r\n                    ]}\r\n                    />\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add Department\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                   <Row>\r\n                       <Col sm ={6}>\r\n                           <Form onSubmit={this.handleSubmit}>\r\n                               <Form.Group controlId = \"DepartmentName\">\r\n                                   <Form.Label>Department Name</Form.Label>\r\n                                   <Form.Control\r\n                                   type =\"text\"\r\n                                   name =\"DepartmentName\"\r\n                                   required\r\n                                   placeholder=\"DepartmentName\"/>\r\n                               </Form.Group>\r\n                               <Form.Group>\r\n                                   <Button variant = \"primary\"\r\n                                   type = \"submit\">Add Department</Button>\r\n                               </Form.Group>\r\n                           </Form>\r\n                       </Col>\r\n                   </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant =\"danger\" onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditDepModal extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {snackbaropen: false, snackbarmsg:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n}\r\n\r\nsnackbarClose = (event) => {\r\n    this.setState({snackbaropen: false});\r\n}\r\n\r\nhandleSubmit(event){\r\n    event.preventDefault();\r\n    fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/departments/\" + event.target.DepartmentId.value, {\r\n        method: \"PUT\",\r\n        headers:{\r\n            \"Accept\":\"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            \"Origin\": \"*\"\r\n        },\r\n        body: JSON.stringify({\r\n            Name: event.target.DepartmentName.value\r\n        })\r\n    })\r\n    .then(res=>res.json())\r\n    .then((result)=>\r\n    {\r\n        this.setState({snackbaropen: true, snackbarmsg: \"Edited successfully!\"})\r\n        \r\n    },\r\n    (error) =>{\r\n        this.setState({snackbaropen: true, snackbarmsg: \"failed\"})\r\n    }\r\n    )\r\n}\r\nrender() {\r\n    return(\r\n        <div className = \"container\">\r\n            <Snackbar \r\n            anchorOrigin = {{vertical:'center', horizontal:'center'}}\r\n            open = {this.state.snackbaropen}\r\n            autoHideDuration = {3000}\r\n            onClose = {this.snackbarClose}\r\n            message = {<span id =\"message-id\">{this.state.snackbarmsg}</span>}\r\n            action={[<IconButton\r\n                key=\"close\"\r\n                arial-label=\"close\"\r\n                color =\"inherit\"\r\n                onClick ={this.snackbarClose}>\r\n                x\r\n                </IconButton>\r\n                ]}\r\n                />\r\n        <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Edit department\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n               <Row>\r\n                   <Col sm ={6}>\r\n                       <Form onSubmit={this.handleSubmit}>\r\n                       <Form.Group controlId = \"DepartmentId\">\r\n                               <Form.Label>Department Id</Form.Label>\r\n                               <Form.Control\r\n                               type =\"text\"\r\n                               name =\"DepartmentId\"\r\n                               required\r\n                               disabled\r\n                               defaultValue={this.props.depid}\r\n                               placeholder=\"DepartmentId\"/>\r\n                           </Form.Group>\r\n                           <Form.Group controlId = \"DepartmentName\">\r\n                               <Form.Label>Department Name</Form.Label>\r\n                               <Form.Control\r\n                               type =\"text\"\r\n                               name =\"DepartmentName\"\r\n                               required\r\n                               defaultValue={this.props.depname}\r\n                               placeholder=\"DepartmentName\"/>\r\n                           </Form.Group>\r\n                           <Form.Group>\r\n                               <Button variant = \"primary\"\r\n                               type = \"submit\">Update Department</Button>\r\n                           </Form.Group>\r\n                       </Form>\r\n                   </Col>\r\n               </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant =\"danger\" onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </div>\r\n    )\r\n}\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Table, Container} from 'react-bootstrap';\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\n\r\nimport {AddDepModal} from './AddDepModal';\r\nimport {EditDepModal} from './EditDepModal';\r\n\r\nexport class Department extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {deps:[], addModalShow: false, editModalShow: false}\r\n\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.refreshList();\r\n    }\r\n\r\n     refreshList()\r\n    {\r\n       fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/departments\")\r\n       .then(response=> response.json())\r\n       .then(data=> { \r\n        this.setState({deps:data});\r\n       });\r\n    }\r\n\r\n    deleteDep(depid)\r\n    {\r\n    if (window.confirm('Are you sure ?'))\r\n    {\r\n        fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/departments/\" + depid, {\r\n            method:'DELETE',\r\n            header: { \"Accept\":\"application/json\",\r\n                      \"Content-Type\":\"application/json\",\r\n                       \"Origin\": \"*\"\r\n            },\r\n        \r\n        })\r\n        .then(result =>this.setState(this.refreshList))\r\n        \r\n    }\r\n    }\r\n\r\n    render(){\r\n\r\n     const {deps, depid, depname} = this.state;\r\n     let addModalClose = () => this.setState({addModalShow:false}, this.refreshList)\r\n     let editModalClose = () => this.setState({editModalShow:false}, this.refreshList)\r\n    return (\r\n        <div>\r\n     <Table className = \"mt-4\" striped bordered hover size =\"sm\">\r\n    <thead>\r\n        <tr>\r\n            <th>DepartmentID</th>\r\n            <th>DepartmentName</th>\r\n            <th>Options</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        {deps.map(dep=> \r\n            <tr key = {dep.id}> \r\n            <td>{dep.id}</td>\r\n            <td>{dep.name}</td>\r\n            <td>\r\n                <ButtonToolbar>\r\n                    <Button\r\n                    className =\"mr-2\" variant =\"info\"\r\n                    onClick = {() => this.setState({editModalShow:true, depid: dep.id, depname: dep.name})}\r\n                    >\r\n                        Edit\r\n                    </Button>\r\n                    <Button\r\n                        className =\"mr-2\" \r\n                        onClick ={() => this.deleteDep(dep.id)}\r\n                        variant =\"danger\">\r\n                        Delete\r\n                    </Button>\r\n                    <EditDepModal\r\n                    show = {this.state.editModalShow}\r\n                    onHide = {editModalClose}\r\n                    depid = {depid}\r\n                    depname = {depname}/>\r\n                </ButtonToolbar>\r\n            </td>\r\n            </tr>\r\n            )}\r\n    </tbody>\r\n     </Table>\r\n     <ButtonToolbar>\r\n    <Button variant = \"primary\" onClick = {() => this.setState({addModalShow: true})}>Add Department</Button>\r\n    <AddDepModal \r\n    show ={this.state.addModalShow} \r\n    onHide ={addModalClose}/>\r\n</ButtonToolbar>\r\n</div>\r\n    )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form, Container} from 'react-bootstrap';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class AddUserModal extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {deps:[], snackbaropen: false, snackbarmsg:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    \r\n    snackbarClose = (event) => {\r\n        this.setState({snackbaropen: false});\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/departments/\")\r\n        .then(response => response.json())\r\n        .then(data=>{\r\n            this.setState({deps: data});\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/users/\", {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Accept\":\"application/json\",\r\n                \"Content-Type\":\"application/json\",\r\n                \"Origin\": \"*\"\r\n            },\r\n            body: JSON.stringify({\r\n                UserName: event.target.UserName.value,\r\n                FullName: event.target.FullName.value,\r\n                DepartmentId: event.target.DepartmentId.value,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>\r\n        {\r\n            console.log(result)\r\n            this.setState({snackbaropen: true, snackbarmsg: \"Added successfully!\"})\r\n            \r\n        },\r\n        (error) =>{\r\n            this.setState({snackbaropen: true, snackbarmsg: \"Failed!\"})\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className = \"container\">\r\n                <Snackbar \r\n                anchorOrigin = {{vertical:'center', horizontal:'center'}}\r\n                open = {this.state.snackbaropen}\r\n                autoHideDuration = {1000}\r\n                onClose = {this.snackbarClose}\r\n                message = {<span id =\"message-id\">{this.state.snackbarmsg}</span>}\r\n                action={[<IconButton\r\n                    key=\"close\"\r\n                    arial-label=\"close\"\r\n                    color =\"inherit\"\r\n                    onClick ={this.snackbarClose}>\r\n                    x\r\n                    </IconButton>\r\n                    ]}\r\n                    />\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add User\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                   <Row>\r\n                       <Col sm ={6}>\r\n                           <Form onSubmit={this.handleSubmit}>\r\n                               <Form.Group controlId = \"UserName\">\r\n                                   <Form.Label>User Name</Form.Label>\r\n                                   <Form.Control\r\n                                   type =\"text\"\r\n                                   name =\"UserName\"\r\n                                   required\r\n                                   placeholder=\"UserName\"/>\r\n                               </Form.Group>\r\n                               <Form.Group controlId = \"FullName\">\r\n                                   <Form.Label>Full Name</Form.Label>\r\n                                   <Form.Control\r\n                                   type =\"text\"\r\n                                   name =\"FullName\"\r\n                                   required\r\n                                   placeholder=\"FullName\"/>\r\n                               </Form.Group>\r\n                               <Form.Group controlId = \"DepartmentId\">\r\n                                   <Form.Label>Department</Form.Label>\r\n                                <Form.Control as = \"select\">\r\n                                    {this.state.deps.map(dep=>\r\n                                       <option key = {dep.id} value = {dep.id}>{dep.name}</option>  \r\n                                       )}\r\n\r\n                                </Form.Control>\r\n                               </Form.Group>\r\n                               <Form.Group>\r\n                                   <Button variant = \"primary\"\r\n                                   type = \"submit\">Add User</Button>\r\n                               </Form.Group>\r\n                           </Form>\r\n                       </Col>\r\n                   </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant =\"danger\" onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form, Container} from 'react-bootstrap';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditUserModal extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {deps:[], snackbaropen: false, snackbarmsg:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    \r\n    snackbarClose = (event) => {\r\n        this.setState({snackbaropen: false});\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/departments/\")\r\n        .then(response => response.json())\r\n        .then(data=>{\r\n            this.setState({deps: data});\r\n        });\r\n    }\r\n\r\n    handleSubmit(event){\r\n        fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/users/\" + event.target.UserId.value, {\r\n            method: \"PUT\",\r\n            headers:{\r\n                \"Accept\":\"application/json\",\r\n                \"Content-Type\":\"application/json\",\r\n                \"Origin\": \"*\"\r\n            },\r\n            body: JSON.stringify({\r\n                UserName: event.target.UserName.value,\r\n                FullName: event.target.FullName.value,\r\n                DepartmentId: event.target.DepartmentId.value,\r\n            })\r\n        })\r\n        .then(res=>res.json())\r\n        .then((result)=>\r\n        {\r\n            console.log(result)\r\n            this.setState({snackbaropen: true, snackbarmsg: \"Added successfully!\"})\r\n            \r\n        },\r\n        (error) =>{\r\n            this.setState({snackbaropen: true, snackbarmsg: \"Failed!\"})\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className = \"container\">\r\n                <Snackbar \r\n                anchorOrigin = {{vertical:'center', horizontal:'center'}}\r\n                open = {this.state.snackbaropen}\r\n                autoHideDuration = {1000}\r\n                onClose = {this.snackbarClose}\r\n                message = {<span id =\"message-id\">{this.state.snackbarmsg}</span>}\r\n                action={[<IconButton\r\n                    key=\"close\"\r\n                    arial-label=\"close\"\r\n                    color =\"inherit\"\r\n                    onClick ={this.snackbarClose}>\r\n                    x\r\n                    </IconButton>\r\n                    ]}\r\n                    />\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Edit User\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                   <Row>\r\n                       <Col sm ={6}>\r\n                           <Form onSubmit={this.handleSubmit}>\r\n                           <Form.Group controlId = \"UserId\">\r\n                                   <Form.Label>User Id</Form.Label>\r\n                                   <Form.Control\r\n                                   type =\"number\"\r\n                                   name =\"UserId\"\r\n                                   disabled\r\n                                   defaultValue={this.props.userid}\r\n                                   placeholder=\"UserId\"/>\r\n                               </Form.Group>\r\n                               <Form.Group controlId = \"UserName\">\r\n                                   <Form.Label>User Name</Form.Label>\r\n                                   <Form.Control\r\n                                   type =\"text\"\r\n                                   name =\"UserName\"\r\n                                   required\r\n                                   defaultValue={this.props.username}\r\n                                   placeholder=\"UserName\"/>\r\n                               </Form.Group>\r\n                               <Form.Group controlId = \"FullName\">\r\n                                   <Form.Label>Full Name</Form.Label>\r\n                                   <Form.Control\r\n                                   type =\"text\"\r\n                                   name =\"FullName\"\r\n                                   required\r\n                                   defaultValue={this.props.fullname}\r\n                                   placeholder=\"FullName\"/>\r\n                               </Form.Group>\r\n                               <Form.Group controlId = \"DepartmentId\">\r\n                                   <Form.Label>Department</Form.Label>\r\n                                <Form.Control as = \"select\"\r\n                                defaultValue={this.props.departmentid}>\r\n                                    {this.state.deps.map(dep=>\r\n                                       <option key = {dep.id} value = {dep.id}>{dep.name}</option>  \r\n                                       )}\r\n\r\n                                </Form.Control>\r\n                               </Form.Group>\r\n                               <Form.Group>\r\n                                   <Button variant = \"primary\"\r\n                                   type = \"submit\">Update User</Button>\r\n                               </Form.Group>\r\n                           </Form>\r\n                       </Col>\r\n                   </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant =\"danger\" onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport {Table, Container} from 'react-bootstrap';\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\n\r\nimport {AddUserModal} from './AddUserModal';\r\nimport {EditUserModal} from './EditUserModal';\r\n\r\nexport class Users extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {users:[], addModalShow: false, editModalShow: false}\r\n\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList()\r\n    {\r\n       fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/users\")\r\n       .then(response=> response.json())\r\n       .then(data=> { \r\n        this.setState({users:data});\r\n       });\r\n    }\r\n\r\n    deleteUser(userid)\r\n    {\r\n    if (window.confirm('Are you sure ?'))\r\n    {\r\n        fetch(\"https://rostelecomtaskapi20200531200554.azurewebsites.net/api/users/\" + userid, {\r\n            method:'DELETE',\r\n            header: { \"Accept\":\"application/json\",\r\n                      \"Content-Type\":\"application/json\",\r\n                       \"Origin\": \"*\"\r\n            },\r\n        \r\n        })\r\n        .then(result =>this.setState(this.refreshList))\r\n        \r\n    }\r\n    }\r\n\r\n    \r\n    render(){\r\n        const {users, userid, username, fullname, departmentid} = this.state;\r\n     let addModalClose = () => this.setState({addModalShow:false}, this.refreshList)\r\n     let editModalClose = () => this.setState({editModalShow:false}, this.refreshList)\r\n    return (\r\n        <div>\r\n        <Table className = \"mt-4\" striped bordered hover size =\"sm\">\r\n       <thead>\r\n           <tr>\r\n               <th>UserID</th>\r\n               <th>UserName</th>\r\n               <th>FullName</th>\r\n               <th>Department</th>\r\n               <th>Options</th>\r\n           </tr>\r\n       </thead>\r\n       <tbody>\r\n           {users.map(user=> \r\n               <tr key = {user.id}> \r\n               <td>{user.id}</td>\r\n               <td>{user.userName}</td>\r\n               <td>{user.fullName}</td>\r\n               <td>{user.department && user.department.name}</td>\r\n               <td>\r\n                   <ButtonToolbar>\r\n                       <Button\r\n                       className =\"mr-2\" variant =\"info\"\r\n                       onClick = {() => this.setState({editModalShow:true,\r\n                        userid: user.id,\r\n                          username: user.userName, \r\n                          fullname: user.fullName,\r\n                          departmentid: user.department && user.department.id })}\r\n                       >\r\n                           Edit\r\n                       </Button>\r\n                       <Button\r\n                           className =\"mr-2\" \r\n                           onClick ={() => this.deleteUser(user.id)}\r\n                           variant =\"danger\">\r\n                           Delete\r\n                       </Button>\r\n                       <EditUserModal\r\n                       show = {this.state.editModalShow}\r\n                       onHide = {editModalClose}\r\n                       userid = {userid}\r\n                       username = {username}\r\n                       fullname = {fullname}\r\n                       departmentid ={departmentid}/>\r\n                   </ButtonToolbar>\r\n               </td>\r\n               </tr>\r\n               )}\r\n       </tbody>\r\n        </Table>\r\n        <ButtonToolbar>\r\n       <Button variant = \"primary\" onClick = {() => this.setState({addModalShow: true})}>Add User</Button>\r\n       <AddUserModal \r\n       show ={this.state.addModalShow} \r\n       onHide ={addModalClose}/>\r\n   </ButtonToolbar>\r\n   </div>\r\n    )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\n\r\nexport class Navigation extends Component {\r\n    render(){\r\n        return(\r\n            <Navbar bg = \"dark\" expand = \"lg\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\"></Navbar.Collapse>\r\n                    <Nav className = \"navbar-brand-custom\">\r\n                        <NavLink className = \"d-inline p-2 bg-dark text-white\"\r\n                        to = \"/\">Home</NavLink>\r\n\r\n                        <NavLink className = \"d-inline p-2 bg-dark text-white\"\r\n                        to = \"/department\">Departments</NavLink>\r\n\r\n                        <NavLink className = \"d-inline p-2 bg-dark text-white\"\r\n                        to = \"/users\">Users</NavLink>\r\n                    </Nav>\r\n                </Navbar>\r\n          \r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\n\nimport {Home} from './components/Home'\nimport {Department} from './components/Department'\nimport {Users} from './components/Users'\nimport {Navigation} from './components/Navigation'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"container\">\n\n      <h3 className=\"m-3 d-flex justify-content-center\">Rostelecom test React JS app consuming ASP .NET Core Web Api</h3>\n      <h5 className=\"m-3 d-flex justify-content-center\">Users and departments management portal</h5>\n\n      <Navigation/>\n\n<Switch>\n  <Route path = \"/\" component = {Home} exact/>\n  <Route path = \"/department\" component = {Department} />\n  <Route path = \"/users\" component = {Users}/>\n</Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}